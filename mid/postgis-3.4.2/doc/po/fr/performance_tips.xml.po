# SOME DESCRIPTIVE TITLE.
#
# Translators:
# geojs, 2014
# Guy BARA <bara.guy@gmail.com>, 2014
# Vincent Bre <vincent.bre@oslandia.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2023-07-15 01:28+0000\n"
"PO-Revision-Date: 2023-01-06 15:50+0000\n"
"Last-Translator: Vincent Bre <vincent.bre@oslandia.com>\n"
"Language-Team: French <https://weblate.osgeo.org/projects/postgis/"
"performance_tipsxml/fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.14.1\n"

#. Tag: title
#: performance_tips.xml:3
#, no-c-format
msgid "Performance Tips"
msgstr "Conseils sur les performances"

#. Tag: title
#: performance_tips.xml:6
#, no-c-format
msgid "Small tables of large geometries"
msgstr "Petites tables de grandes géométries"

#. Tag: title
#: performance_tips.xml:9
#, no-c-format
msgid "Problem description"
msgstr "Description du problème"

#. Tag: para
#: performance_tips.xml:11
#, no-c-format
msgid ""
"Current PostgreSQL versions (including 9.6) suffer from a query optimizer "
"weakness regarding TOAST tables. TOAST tables are a kind of \"extension "
"room\" used to store large (in the sense of data size) values that do not "
"fit into normal data pages (like long texts, images or complex geometries "
"with lots of vertices), see <ulink url=\"http://www.postgresql.org/docs/"
"current/static/storage-toast.html\">the PostgreSQL Documentation for TOAST</"
"ulink> for more information)."
msgstr ""
"Les versions de PostgreSQL actuelles (y compris 8.0) souffrent d'une "
"faiblesse optimiseur de requête relative les tables TOAST. Tables TOAST sont "
"une sorte de «salle de l'extension\" utilisé pour stocker de grandes valeurs "
"(dans le sens de la taille des données) qui ne rentrent pas dans les pages "
"de données normales (comme de longs textes, images ou des géométries "
"complexes avec beaucoup de sommets), voir <ulink url=\"http://www.postgresql."
"org/docs/current/static/storage-toast.html\"> Documentation PostgreSQL pour "
"TOAST </ulink> pour plus d'informations)."

#. Tag: para
#: performance_tips.xml:19
#, no-c-format
msgid ""
"The problem appears if you happen to have a table with rather large "
"geometries, but not too many rows of them (like a table containing the "
"boundaries of all European countries in high resolution). Then the table "
"itself is small, but it uses lots of TOAST space. In our example case, the "
"table itself had about 80 rows and used only 3 data pages, but the TOAST "
"table used 8225 pages."
msgstr ""
"Le problème apparaît s'il vous arrive d'avoir une table avec d'assez grandes "
"géométries, mais pas beaucoup de lignes d'entre elles (comme un tableau "
"contenant les frontières de tous les pays européens en haute résolution). "
"Ensuite, le tableau lui-même est petit, mais il utilise beaucoup d'espace "
"TOAST. Dans notre exemple, le cas, la table elle-même avait environ 80 "
"lignes et seulement 3 pages de données utilisées, mais la table TOAST 8225 "
"pages utilisé."

#. Tag: para
#: performance_tips.xml:26
#, no-c-format
msgid ""
"Now issue a query where you use the geometry operator &amp;&amp; to search "
"for a bounding box that matches only very few of those rows. Now the query "
"optimizer sees that the table has only 3 pages and 80 rows. It estimates "
"that a sequential scan on such a small table is much faster than using an "
"index. And so it decides to ignore the GIST index. Usually, this estimation "
"is correct. But in our case, the &amp;&amp; operator has to fetch every "
"geometry from disk to compare the bounding boxes, thus reading all TOAST "
"pages, too."
msgstr ""
"Maintenant émettre une requête en utilisant l'opérateur de géométrie &amp;"
"&amp; pour rechercher une boîte englobante qui correspond que très peu de "
"ces lignes. Maintenant l'optimiseur de requêtes voit que la table n'a que 3 "
"pages et 80 lignes. Il estime qu'une analyse séquentielle sur une telle "
"petite table est beaucoup plus rapide que d'utiliser un index. Et alors il "
"décide d'ignorer l'index GIST. Habituellement, cette estimation est "
"correcte. Mais dans notre cas, l'opérateur &amp;&amp; doit aller chercher "
"chaque géométrie à partir du disque pour comparer les boîtes englobantes, et "
"par conséquent la lecture de toutes les pages TOAST également."

#. Tag: para
#: performance_tips.xml:35
#, no-c-format
msgid ""
"To see whether your suffer from this issue, use the \"EXPLAIN ANALYZE\" "
"postgresql command. For more information and the technical details, you can "
"read the thread on the PostgreSQL performance mailing list: <ulink "
"url=\"http://archives.postgresql.org/pgsql-performance/2005-02/msg00030."
"php\">http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php</"
"ulink>"
msgstr ""
"Pour voir si vous souffrez de ce problème, utilisez la commande postgresql "
"\"EXPLAIN ANALYZE\". Pour plus d'informations et les détails techniques, "
"vous pouvez lire le fil de discussion sur la liste de diffusion sur les "
"performances de PostgreSQL : <ulink url=\"http ://archives.postgresql.org/"
"pgsql-performance/2005-02/msg00030.php\">http ://archives.postgresql.org/"
"pgsql-performance/2005-02/msg00030.php</ulink>"

#. Tag: para
#: performance_tips.xml:41
#, no-c-format
msgid ""
"and newer thread on PostGIS <ulink url=\"https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html\">https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html</ulink>"
msgstr ""
"et un fil d'actualités plus récent sur PostGIS <ulink url=\"https://lists."
"osgeo.org/pipermail/postgis-devel/2017-June/026209.html\">https://lists."
"osgeo.org/pipermail/postgis-devel/2017-June/026209.html</ulink>"

#. Tag: title
#: performance_tips.xml:45
#, no-c-format
msgid "Workarounds"
msgstr "Solutions de contournement"

#. Tag: para
#: performance_tips.xml:47
#, no-c-format
msgid ""
"The PostgreSQL people are trying to solve this issue by making the query "
"estimation TOAST-aware. For now, here are two workarounds:"
msgstr ""
"Les personnes de PostgreSQL essayent de résoudre ce problème en faisant "
"l'estimation de la requête TOAST-courant. Pour l'instant, voici deux "
"solutions :"

#. Tag: para
#: performance_tips.xml:50
#, no-c-format
msgid ""
"The first workaround is to force the query planner to use the index. Send "
"\"SET enable_seqscan TO off;\" to the server before issuing the query. This "
"basically forces the query planner to avoid sequential scans whenever "
"possible. So it uses the GIST index as usual. But this flag has to be set on "
"every connection, and it causes the query planner to make misestimations in "
"other cases, so you should \"SET enable_seqscan TO on;\" after the query."
msgstr ""
"La première solution consiste à forcer le planificateur de requêtes à "
"utiliser l'index. Envoyer \"SET enable_seqscan TO off;\" au serveur avant "
"d'émettre la requête. Cela force le planificateur de requêtes à éviter "
"balayages séquentiels lorsque cela est possible. Donc, il utilise l'index "
"GIST comme d'habitude. Mais cet indicateur doit être fixé à chaque "
"connexion, et il provoque le planificateur de requêtes à faire des erreurs "
"d'estimation dans les autres cas, vous devrez donc faire \"SET POUR "
"enable_seqscan sur;\" après la requête."

#. Tag: para
#: performance_tips.xml:58
#, no-c-format
msgid ""
"The second workaround is to make the sequential scan as fast as the query "
"planner thinks. This can be achieved by creating an additional column that "
"\"caches\" the bbox, and matching against this. In our example, the commands "
"are like:"
msgstr ""
"La deuxième solution consiste à faire le balayage séquentielle aussi vite "
"que le planificateur de requêtes pense. Ceci peut être réalisé en créant une "
"colonne supplémentaire qui \"cache\" la bbox, et contre cette "
"correspondance. Dans notre exemple, les commandes sont comme :"

#. Tag: para
#: performance_tips.xml:65
#, no-c-format
msgid ""
"Now change your query to use the &amp;&amp; operator against bbox instead of "
"geom_column, like:"
msgstr ""
"Modifiez maintenant votre requête pour utiliser l'opérateur &amp;&amp; "
"contre bbox au lieu de geom_column, comme suit :"

#. Tag: para
#: performance_tips.xml:70
#, no-c-format
msgid ""
"Of course, if you change or add rows to mytable, you have to keep the bbox "
"\"in sync\". The most transparent way to do this would be triggers, but you "
"also can modify your application to keep the bbox column current or run the "
"UPDATE query above after every modification."
msgstr ""
"Bien sûr, si vous changez ou ajoutez des lignes à mytable, vous devez garder "
"la bbox \"synchro\". La façon la plus transparente pour ce faire serait des "
"déclencheurs, mais vous pouvez également modifier votre application afin de "
"maintenir la colonne bbox courante ou exécuter la requête UPDATE ci-dessus "
"après chaque modification."

#. Tag: title
#: performance_tips.xml:79
#, no-c-format
msgid "CLUSTERing on geometry indices"
msgstr "CLUSTER d'index géométriques"

#. Tag: para
#: performance_tips.xml:81
#, no-c-format
msgid ""
"For tables that are mostly read-only, and where a single index is used for "
"the majority of queries, PostgreSQL offers the CLUSTER command. This command "
"physically reorders all the data rows in the same order as the index "
"criteria, yielding two performance advantages: First, for index range scans, "
"the number of seeks on the data table is drastically reduced. Second, if "
"your working set concentrates to some small intervals on the indices, you "
"have a more efficient caching because the data rows are spread along fewer "
"data pages. (Feel invited to read the CLUSTER command documentation from the "
"PostgreSQL manual at this point.)"
msgstr ""
"Pour les tables qui sont pour la plupart en lecture seule, et où un seul "
"index est utilisé pour la majorité des requêtes, PostgreSQL offre la "
"commande CLUSTER. Cette commande réorganise physiquement toutes les lignes "
"de données dans le même ordre que les critères de l'index, ce qui donne deux "
"avantages de performance : d'abord, pour des analyses d'intervalle de "
"l'index, le nombre de recherche sur la table de données est considérablement "
"réduit. Deuxièmement, si votre jeu de travail se concentre à quelques petits "
"intervalles sur les index, vous avez une mise en cache plus efficace parce "
"que les lignes de données sont dispersées sur moins de pages de données. "
"(N'hésitez pas à lire la documentation de la commande CLUSTER du manuel "
"PostgreSQL à ce stade)"

#. Tag: para
#: performance_tips.xml:91
#, no-c-format
msgid ""
"However, currently PostgreSQL does not allow clustering on PostGIS GIST "
"indices because GIST indices simply ignores NULL values, you get an error "
"message like:"
msgstr ""
"Cependant, PostgreSQL ne permet actuellement pas le clustering sur les index "
"GIST de PostGIS car les indices GIST ignorent les valeurs NULL, vous obtenez "
"un message d'erreur comme :"

#. Tag: para
#: performance_tips.xml:97
#, no-c-format
msgid ""
"As the HINT message tells you, one can work around this deficiency by adding "
"a \"not null\" constraint to the table:"
msgstr ""
"Comme le message d'ASTUCES vous le dit, on peut contourner cette lacune en "
"ajoutant une contrainte \"not null\" à la table :"

#. Tag: para
#: performance_tips.xml:102
#, no-c-format
msgid ""
"Of course, this will not work if you in fact need NULL values in your "
"geometry column. Additionally, you must use the above method to add the "
"constraint, using a CHECK constraint like \"ALTER TABLE blubb ADD CHECK "
"(geometry is not null);\" will not work."
msgstr ""
"Bien sûr, cela ne fonctionnera pas si vous avez besoin, dans les faits, de "
"valeurs NULL dans la colonne de géométrie. En outre, vous devez utiliser la "
"méthode ci-dessus pour ajouter la contrainte, en utilisant une contrainte "
"CHECK comme \"ALTER TABLE blubb ADD CHECK (geometry is not null)\" ne "
"fonctionnera pas."

#. Tag: title
#: performance_tips.xml:109
#, no-c-format
msgid "Avoiding dimension conversion"
msgstr "Eviter les conversions de dimension"

#. Tag: para
#: performance_tips.xml:111
#, no-c-format
msgid ""
"Sometimes, you happen to have 3D or 4D data in your table, but always access "
"it using OpenGIS compliant ST_AsText() or ST_AsBinary() functions that only "
"output 2D geometries. They do this by internally calling the ST_Force2D() "
"function, which introduces a significant overhead for large geometries. To "
"avoid this overhead, it may be feasible to pre-drop those additional "
"dimensions once and forever:"
msgstr ""
"Il arrive parfois que vous ayez des données 3D ou 4D dans votre table, mais "
"que vous y accédiez toujours à l'aide des fonctions ST_AsText() ou "
"ST_AsBinary() conformes à OpenGIS qui ne produisent que des géométries 2D. "
"Pour ce faire, elles appellent en interne la fonction ST_Force2D(), qui "
"introduit une surcharge importante pour les géométries de grande taille. "
"Pour éviter cette surcharge, il peut être possible de pré-déposer ces "
"dimensions supplémentaires une fois pour toutes :"

#. Tag: para
#: performance_tips.xml:120
#, no-c-format
msgid ""
"Note that if you added your geometry column using AddGeometryColumn() "
"there'll be a constraint on geometry dimension. To bypass it you will need "
"to drop the constraint. Remember to update the entry in the geometry_columns "
"table and recreate the constraint afterwards."
msgstr ""
"Notez que si vous avez ajouté votre colonne de géométrie à l'aide "
"AddGeometryColumn (), il y aura une contrainte sur la dimension de la "
"géométrie. Pour contourner vous devrez supprimer la contrainte. N'oubliez "
"pas de mettre à jour l'entrée dans la table geometry_columns et recréer la "
"contrainte par la suite."

#. Tag: para
#: performance_tips.xml:126
#, no-c-format
msgid ""
"In case of large tables, it may be wise to divide this UPDATE into smaller "
"portions by constraining the UPDATE to a part of the table via a WHERE "
"clause and your primary key or another feasible criteria, and running a "
"simple \"VACUUM;\" between your UPDATEs. This drastically reduces the need "
"for temporary disk space. Additionally, if you have mixed dimension "
"geometries, restricting the UPDATE by \"WHERE dimension(geom)&gt;2\" skips "
"re-writing of geometries that already are in 2D."
msgstr ""
"En cas de grandes tables, il peut être judicieux de diviser cette mise à "
"jour en petites portions en restreignant l'UPDATE à une partie de la table "
"via une clause WHERE et votre clé primaire ou d'un autre critère, et "
"exécutant un simple «VACUUM» ; entre votre mises à jour. Cela réduit "
"considérablement le besoin d'espace disque temporaire. En outre, si vous "
"avez des données géométriques de dimension mixte, restreindre la mise à jour "
"en \"WHERE dimension(the_geom)&gt;2\" saute la ré-écriture des géométries "
"qui sont déjà en 2D."
